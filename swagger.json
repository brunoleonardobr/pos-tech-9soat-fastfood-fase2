{
  "openapi": "3.0.0",
  "info": {
    "title": "API Fastfood",
    "version": "1.0.0",
    "description": "API for a fastfood service developed for the Pos Degree software architecture at FIAP"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Localhost"
    }
  ],
  "paths": {
    "/healthy": {
      "get": {
        "tags": ["health"],
        "summary": "Health Check",
        "description": "Returns the health status of the service",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "healthy"
                }
              }
            }
          }
        }
      }
    },
    "/product": {
      "post": {
        "tags": ["product"],
        "summary": "Create a new product",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product created successfully"
                    },
                    "product": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/{id}": {
      "patch": {
        "tags": ["product"],
        "summary": "Update an existing product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product updated successfully"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["product"],
        "summary": "Delete a product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product deleted successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product/{category}": {
      "get": {
        "tags": ["product"],
        "summary": "List products by category",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["LANCHE", "BEBIDA", "SOBREMESA", "ACOMPANHAMENTO"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customer": {
      "post": {
        "tags": ["customer"],
        "summary": "Create a new customer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Customer created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Customer created successfully"
                    },
                    "customer": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customer/{cpf}": {
      "get": {
        "tags": ["customer"],
        "summary": "Get a customer by CPF",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Customer found"
                    },
                    "customer": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/checkout": {
      "post": {
        "tags": ["order"],
        "summary": "Create a new order",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Order created successfully"
                    },
                    "order": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "List all orders",
        "tags": ["order"],
        "responses": {
          "200": {
            "description": "A list of orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string" },
                      "clientId": { "type": "string" },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "productId": { "type": "string" },
                            "quantity": { "type": "number" }
                          }
                        }
                      },
                      "total": { "type": "number" }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}/status": {
      "get": {
        "summary": "Get status of an order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["order"],
        "responses": {
          "200": {
            "description": "Order status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "20271ae8-07db-41ff-af29-4ac4e0d341e0"
                    },
                    "status": {
                      "type": "string",
                      "example": "approved"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}/status/{status}": {
      "put": {
        "summary": "Update order status",
        "tags": ["order"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["received", "progress", "ready", "finished"]
            },
            "description": "New status of the order"
          }
        ],
        "responses": {
          "200": {
            "description": "Order updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/payment/process": {
      "post": {
        "summary": "Process payment",
        "tags": ["webhooks"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "orderId": {
                    "type": "string",
                    "description": "ID of the order"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the payment"
                  }
                },
                "required": ["orderId", "status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "order": {
                      "type": "object",
                      "description": "Details of the created order"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateProductDTO": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "The description of the product.",
            "example": "Chicken sandwich"
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "The price of the product.",
            "example": 15.99
          },
          "category": {
            "type": "string",
            "enum": ["LANCHE", "BEBIDA", "SOBREMESA", "ACOMPANHAMENTO"],
            "description": "The category of the product. It must be one of the valid values.",
            "example": "LANCHE"
          }
        },
        "required": ["description", "price", "category"]
      },
      "UpdateProductDTO": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "The description of the product.",
            "example": "Chicken sandwich"
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "The price of the product.",
            "example": 15.99
          },
          "category": {
            "type": "string",
            "enum": ["LANCHE", "BEBIDA", "SOBREMESA", "ACOMPANHAMENTO"],
            "description": "The category of the product. It must be one of the valid values.",
            "example": "LANCHE"
          }
        },
        "required": ["description", "price", "category"]
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The unique identifier for the product.",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "description": {
            "type": "string",
            "description": "The description of the product.",
            "example": "Chicken sandwich"
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "The price of the product.",
            "example": 15.99
          },
          "category": {
            "type": "string",
            "enum": ["LANCHE", "BEBIDA", "SOBREMESA", "ACOMPANHAMENTO"],
            "description": "The category of the product. It must be one of the valid values.",
            "example": "LANCHE"
          }
        }
      },
      "CreateCustomerDTO": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": ["cpf", "name", "email"]
      },
      "GetCustomerByCpfDTO": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string"
          }
        },
        "required": ["cpf"]
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "CheckoutDTO": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "clientId": {
            "type": "string"
          }
        },
        "required": ["items", "clientId"]
      }
    }
  }
}
